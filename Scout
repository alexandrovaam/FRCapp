import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.*;
import java.io.*;
import java.util.ArrayList;

public class Scout {
    private JPanel panel;
    private JTextField teamNumberField;
    private JTextField bestFeatureField;
    private JCheckBox swerveDrive;
    private JCheckBox tankDrive;
    private JTextArea notesArea;
    private JButton submitButton;
    private JTable table;
    private DefaultTableModel tableModel;

    private ArrayList<String[]> records = new ArrayList<>();
    private final String FILE_NAME = "scouting_data.csv";

    public Scout() {
        panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        teamNumberField = new JTextField(10);
        bestFeatureField = new JTextField(10);
        swerveDrive = new JCheckBox("Swerve Drive");
        tankDrive = new JCheckBox("Tank Drive");
        notesArea = new JTextArea(5, 20);
        submitButton = new JButton("Submit");

        String[] columns = {"Team #", "Best Feature", "Drive Type", "Notes"};
        tableModel = new DefaultTableModel(columns, 0);
        table = new JTable(tableModel);
        JScrollPane tableScrollPane = new JScrollPane(table);

        panel.add(new JLabel("Team Number Observed:"));
        panel.add(teamNumberField);

        panel.add(new JLabel("Best Feature:"));
        panel.add(bestFeatureField);

        panel.add(new JLabel("Drive Type:"));
        panel.add(swerveDrive);
        panel.add(tankDrive);

        panel.add(new JLabel("Additional Notes:"));
        panel.add(new JScrollPane(notesArea));

        panel.add(submitButton);
        panel.add(new JLabel("Scouting Records:"));
        panel.add(tableScrollPane);

        loadDataFromFile();

        submitButton.addActionListener(e -> addRecord());
    }

    private void addRecord() {
        String teamNumber = teamNumberField.getText().trim();
        String bestFeature = bestFeatureField.getText().trim();
        String driveType = (swerveDrive.isSelected() ? "Swerve" : "") +
                (swerveDrive.isSelected() && tankDrive.isSelected() ? " & " : "") +
                (tankDrive.isSelected() ? "Tank" : "");
        String notes = notesArea.getText().trim();

        if (teamNumber.isEmpty()) return;

        String[] record = {teamNumber, bestFeature, driveType, notes};
        tableModel.addRow(record);
        records.add(record);
        saveDataToFile();

        teamNumberField.setText("");
        bestFeatureField.setText("");
        swerveDrive.setSelected(false);
        tankDrive.setSelected(false);
        notesArea.setText("");
    }

    private void loadDataFromFile() {
        File file = new File(FILE_NAME);
        if (!file.exists()) return;

        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
            String line;
            records.clear();
            while ((line = reader.readLine()) != null) {
                String[] row = line.split(",", -1);
                tableModel.addRow(row);
                records.add(row);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void saveDataToFile() {
        try (PrintWriter writer = new PrintWriter(new FileWriter(FILE_NAME))) {
            for (String[] row : records) {
                writer.println(String.join(",", row));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public JPanel getPanel() {
        return panel;
    }
}
